<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright Â© 2019 admin (admin@infrastructurebuilder.org)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
  <parent>
    <groupId>org.infrastructurebuilder.automation</groupId>
    <artifactId>ibautomation-root</artifactId>
    <version>0.9.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>imaging-component-packer</artifactId>
  <packaging>jar</packaging>
  <name>${project.artifactId}</name>
  <description>Maven Plugin to perform Hashicorp packer actions as part of a build</description>
  <properties>
    <test.coverage.percentage.required>25</test.coverage.percentage.required>
    <jacoco.max.missed.classes>40</jacoco.max.missed.classes>
    <ibr.model.version>${ibversion.majorVersion}.${ibversion.minorVersion}.${ibversion.incrementalVersion}</ibr.model.version>
    <hashicorp.packer.download.skip>false</hashicorp.packer.download.skip>
  </properties>
  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>ibr-api</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>ibr-api</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>ibr-aws-dialect</artifactId>
    </dependency>
    <dependency>
      <groupId>org.infrastructurebuilder.util.auth</groupId>
      <artifactId>ibauth-api</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.infrastructurebuilder.util.auth</groupId>
      <artifactId>ibauth-aws</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.infrastructurebuilder</groupId>
      <artifactId>ibexecutor</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jool</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <classifier>no_aop</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-archiver</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>joor</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.infrastructurebuilder.util.logging</groupId>
      <artifactId>iblogconfig</artifactId>
      <classifier>debug</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.infrastructurebuilder.util.logging</groupId>
      <artifactId>iblog-maven-component</artifactId>
      <scope>test</scope>
    </dependency>
    <!--
    WARNING: Beware of http://jira.codehaus.org/browse/MNG-5513 which is triggered by
  a direct or transitive dependency on aether-impl in compile or runtime scope.
    -->
    <!--
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk</artifactId>
    </dependency>
     -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>imaging-test-fixtures</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>imaging-test-fixtures</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!--  Needed for JSONObject equals -->
      <groupId>org.infrastructurebuilder.usurped</groupId>
      <artifactId>jsonassert</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.vaadin.external.google</groupId>
          <artifactId>android-json</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <target>${project.build.directory}</target>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <!--
       -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>fetch-test-resources</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifact>${project.groupId}:imaging-test-fixtures:${project.version}</artifact>
              <outputDirectory>${project.build.directory}/packer-fixtures</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
        <configuration>
          <skip>false</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>attach-descriptor</id>
            <goals>
              <goal>attach-descriptor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.modello</groupId>
        <artifactId>modello-maven-plugin</artifactId>
        <inherited>true</inherited>
        <configuration>
          <version>${ibr.model.version}</version>
          <models>
          </models>
        </configuration>
        <executions>
          <execution>
            <id>java</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorId>java</generatorId>
            </configuration>
          </execution>
          <execution>
            <id>xpp3-reader</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorId>xpp3-reader</generatorId>
            </configuration>
          </execution>
          <execution>
            <id>xpp3-writer-reflect</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorId>xpp3-writer-reflect</generatorId>
            </configuration>
          </execution>
          <execution>
            <id>make-site-doc</id>
            <phase>pre-site</phase>
            <goals>
              <goal>xdoc</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <inherited>true</inherited>
        <executions>
          <execution>
            <id>formatVersion</id>
            <phase>validate</phase>
            <goals>
              <goal>parse-version</goal>
              <goal>hostname</goal>
              <goal>cpu-count</goal>
              <goal>local-ip</goal>
              <goal>released-version</goal>
            </goals>
            <inherited>false</inherited>
            <configuration>
            </configuration>
          </execution>
        <!--
         -->
          <execution>
            <id>add-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <inherited>false</inherited>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/modello</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>